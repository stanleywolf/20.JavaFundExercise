import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

public class j23AverageGrades {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int stCount = Integer.parseInt(scanner.nextLine());

        List<Student> students = new ArrayList<>();

        for (int i = 0; i < stCount; i++) {
            String[] studTokens = scanner.nextLine().split(" ");
            String name = studTokens[0];
            List<Double> grades = Arrays.stream(studTokens)
                    .skip(1)
                    .map(Double::parseDouble)
                    .collect(Collectors.toList());

            Student student = new Student(name,grades);
            students.add(student);
        }
        students.stream()
                .filter(s -> s.gerAverageGrade() >= 5.00)
                .sorted((a,b) ->{
            int comprResult = a.getName().compareTo(b.getName());
          if(comprResult == 0){
              comprResult = Double.compare(
                      b.gerAverageGrade(),a.gerAverageGrade());
          }
              return comprResult;

        })
                .forEach(s -> System.out.printf(
                        "%s -> %.2f%n",s.getName(),s.gerAverageGrade()));
    }
    public static class Student {
        private String name;
        private List<Double> grades;

         Student(String name, List<Double> grades) {
            this.name = name;
            this.grades = grades;
        }

         String getName() {
            return name;
        }
        Double gerAverageGrade(){
            double averageGrade = this.grades
                    .stream()
                    .mapToDouble(grades -> grades)
                    .average()
                    .getAsDouble();
            return averageGrade;
        }
    }
}
